/* tslint:disable */
/* eslint-disable */
/**
 * Public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiApiPublicAccountLoginRequest,
  ApiApiPublicAccountLoginResponse,
  ApiApiPublicAccountRegisterRequest,
  ApiApiPublicAccountRegisterResponse,
} from '../models/index';
import {
    ApiApiPublicAccountLoginRequestFromJSON,
    ApiApiPublicAccountLoginRequestToJSON,
    ApiApiPublicAccountLoginResponseFromJSON,
    ApiApiPublicAccountLoginResponseToJSON,
    ApiApiPublicAccountRegisterRequestFromJSON,
    ApiApiPublicAccountRegisterRequestToJSON,
    ApiApiPublicAccountRegisterResponseFromJSON,
    ApiApiPublicAccountRegisterResponseToJSON,
} from '../models/index';

export interface ApiPublicAccountLoginGoogleGetRequest {
    loginRequestId?: string;
    isPersistent?: boolean;
}

export interface ApiPublicAccountLoginPostRequest {
    apiApiPublicAccountLoginRequest?: ApiApiPublicAccountLoginRequest;
}

export interface ApiPublicAccountRegisterPostRequest {
    apiApiPublicAccountRegisterRequest?: ApiApiPublicAccountRegisterRequest;
}

/**
 * 
 */
export class AccountApi extends runtime.BaseAPI {

    /**
     */
    async apiPublicAccountLoginGoogleCallbackGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/public/account/login/google/callback`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiPublicAccountLoginGoogleCallbackGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiPublicAccountLoginGoogleCallbackGetRaw(initOverrides);
    }

    /**
     */
    async apiPublicAccountLoginGoogleGetRaw(requestParameters: ApiPublicAccountLoginGoogleGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        if (requestParameters.loginRequestId !== undefined) {
            queryParameters['LoginRequestId'] = requestParameters.loginRequestId;
        }

        if (requestParameters.isPersistent !== undefined) {
            queryParameters['IsPersistent'] = requestParameters.isPersistent;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/public/account/login/google`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiPublicAccountLoginGoogleGet(requestParameters: ApiPublicAccountLoginGoogleGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiPublicAccountLoginGoogleGetRaw(requestParameters, initOverrides);
    }

    /**
     */
    async apiPublicAccountLoginPostRaw(requestParameters: ApiPublicAccountLoginPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiApiPublicAccountLoginResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/public/account/login`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiApiPublicAccountLoginRequestToJSON(requestParameters.apiApiPublicAccountLoginRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiApiPublicAccountLoginResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiPublicAccountLoginPost(requestParameters: ApiPublicAccountLoginPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiApiPublicAccountLoginResponse> {
        const response = await this.apiPublicAccountLoginPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiPublicAccountLogoutPostRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/public/account/logout`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiPublicAccountLogoutPost(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiPublicAccountLogoutPostRaw(initOverrides);
    }

    /**
     */
    async apiPublicAccountMeGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/public/account/me`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiPublicAccountMeGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiPublicAccountMeGetRaw(initOverrides);
    }

    /**
     */
    async apiPublicAccountRegisterPostRaw(requestParameters: ApiPublicAccountRegisterPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiApiPublicAccountRegisterResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/public/account/register`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiApiPublicAccountRegisterRequestToJSON(requestParameters.apiApiPublicAccountRegisterRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiApiPublicAccountRegisterResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiPublicAccountRegisterPost(requestParameters: ApiPublicAccountRegisterPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiApiPublicAccountRegisterResponse> {
        const response = await this.apiPublicAccountRegisterPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
